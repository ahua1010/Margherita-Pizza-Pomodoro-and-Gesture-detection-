import sys
import cv2
from PyQt5.QtMultimedia import QVideoFrame, QVideoSurfaceFormat
from PyQt5.QtMultimediaWidgets import QVideoWidget
from PyQt5.QtWidgets import QWidget, QApplication, QVBoxLayout
from PyQt5.QtCore import pyqtSignal, pyqtSlot, Qt, QThread, QSize
from PyQt5.QtGui import QImage

class Thread(QThread):
    # 自訂訊號 changePixmap，用於傳遞圖像
    changePixmap = pyqtSignal(QImage)

    def run(self):
        # 啟動攝像頭
        cap = cv2.VideoCapture(0)
        while True:
            ret, frame = cap.read()
            if ret:
                # 將 OpenCV 格式的影像轉換成 QImage 格式
                rgbImage = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                h, w, ch = rgbImage.shape
                bytesPerLine = ch * w
                convertToQtFormat = QImage(rgbImage.data, w, h, bytesPerLine, QImage.Format_RGB888)
                # 縮放影像以適應 QVideoSurfaceFormat 設定的大小
                p = convertToQtFormat.scaled(600, 600, Qt.KeepAspectRatio)
                # 發射 changePixmap 訊號，傳遞圖像給 UI
                self.changePixmap.emit(p)

class VideoPlayer(QWidget):
    def __init__(self, parent=None):
        super(VideoPlayer, self).__init__(parent)
        self.videoWidget = QVideoWidget()
        self.video_surface = self.videoWidget.videoSurface()
        video_surface_format = QVideoSurfaceFormat(QSize(600, 600),
                                                   QVideoFrame.pixelFormatFromImageFormat(QImage.Format_RGB888))
        # 啟動視頻表面
        self.video_surface.start(video_surface_format)
        layout = QVBoxLayout()
        layout.addWidget(self.videoWidget)
        self.setLayout(layout)

        self.th = Thread(self)
        self.th.changePixmap.connect(self.update_image)
        self.th.start()

    @pyqtSlot(QImage)
    def update_image(self, image):
        # 更新視頻表面上的圖像
        self.video_surface.present(QVideoFrame(image))

if __name__ == '__main__':
    app = QApplication(sys.argv)
    player = VideoPlayer()
    player.setWindowTitle("播放器")
    player.resize(600, 600)
    player.show()
    sys.exit(app.exec_())
